{
    "contents" : "---\ntitle: \"Setting up the website\"\nauthor: \"Joyce Hsiao\"\ndate: 2015-12-12\n---\n\n**Last updated:** `r Sys.Date()`\n\n**Code version:** `r system(\"git log -1 --format='%H'\", intern = TRUE)`\n\n```{r chunk-options, include=FALSE}\nsource(\"chunk-options.R\")\n```\n\n---\n\n### Objectives\n\nCopy an exisiting GitHub repository and use GitHub Pages to produce a website for the repository.\n\nI use [*ashlar*](http://github.com/jhsiao999/ashlar) as an example and give a simple tutorial for setting up a website. You don't have to publish this website, but I suggest you do as a practice. \n\n---\n\n### Cloning [*ashlar*](http://github.com/jhsiao999/ashlar])\n\n[*ashlar*](http://github.com/jhsiao999/ashlar) is set up to mimic the workflow implemented in [*singleCellSeq*](https://github.com/jdblischak/singleCellSeq). Both projects adopt the popular [*rmarkdown*](http://rmarkdown.rstudio.com/) website layout.\n\nI suggest cloning into a new folder in order to distinguish your work from the example repository.\n\n```\ngit clone https://github.com/jhsiao999/ashlar.git ashlar-trial\n```\n\n---\n\n### Reset git remote directory\n\nRemote directory of the clone is still  [*ashlar*][http://github.com/jhsiao999/ashlar]. Make sure you change the name of the remote repository.\n\n```\ngit remote rm origin\ngit remote add origin https://github.com/jhsiao999/ashlar-trial.git\n```\n\nCreate a repository at *github.com*. Then, push content of the entire directory to the *master* branch. We use *git add -f* option to force add *html* files to the master branch, such as *index.html* for table of content. The default *.gitignore* in [*ashlar*][http://github.com/jhsiao999/ashlar] ignores *htmls*. \n\n```\ngit add -f --all\ngit commit -m \"first commit\"\ngit push origin master\n```\n\n---\n\n### Producing and publishing the website\n\nOption 1: All content for my eyes only\n\nOpen index.html. This is the homepage of your unpubished website. You are DONE!\n\nIf you choose this option, you only have the master branch. The default of the master branch is to not push *htmls, pngs, pdfs, etc*, so edit the *.gitignore* to add these files when updating the remote directory. \n\n\nOption 2: Publish it! Keep a two-branch workflow.\n\nCreate a branch named gh-pages. GitHub then publishes the content for you.\n\n```\ngit checkout -b gh-pages \ngit add -f --all\ngit commit -m \"Build site\"\ngit push origin gh-pages\n```\n\nNote that since the site is kept under the anaysis folder, your site address is under the analysis directory.\n\n*https://jhsiao999.github.io/ashlar/analysis*\n\nThis two-branch workflow is set up to keep the source files (such as *Rmds*) separate from the *html* pages and the output figures. It allows me to keep clean repositories: master for the source, and gh-pages only for the website. \n\nI mostly use RStudio to generate htmls, but when there are a large number of analysis files that need to be updated, I choose to use the simple make command. Below are two of my most recently used paths of update GitHub Pages.\n\nPath 1: I mostly use this one when there's only a small analysis file to be updated.\n\n```\n## Work at the gh-pages branch, push website content to gh-pages,\n## push source to the master\ngit checkout gh-pages\ncd analysis\nmake # (or use knitr to render the Rmds)\ngit add -f *Rmd *html figure/*\ngit commit -m \"add new analysis\"\ngit push origin gh-pages\n\ngit checkout master\ngit merge gh-pages\ngit add new-analysis.Rmd index.Rmd\ngit commit -m \"add new analysis\"\ngit push origin master\n```\n\nPath 2: I use this when the site has not been update in a while, and I need to compile a large number of Rmds.\n\n```\n## Work at the master branch, keep all htmls local\n## Push source to the master branch, use make to generate htmls\n## for the gh-pages branch\n\ngit checkout master\ncd analysis\ngit add new-analysis.Rmd index.Rmd\ngit commit -m \"add new analysis\"\ngit push origin master\n\ngit checkout gh-pages\ngit merge master\nmake\ngit add *Rmd *html figure/*\ngit commit -m \"add new analysis\"\ngit push origin gh-pages\n```\n\n\n\n",
    "created" : 1449954400033.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1057404815",
    "id" : "53648A08",
    "lastKnownWriteTime" : 1449963134,
    "path" : "~/Dropbox/GitHub/ashlar/analysis/tutorial.Rmd",
    "project_path" : "tutorial.Rmd",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_markdown"
}